{
  "info": {
    "termsOfService": "https://trello.com/legal", 
    "description": "This document describes the REST API of Trello as published by Trello.com. <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>", 
    "license": {
      "url": "https://trello.com/legal", 
      "name": "Trello : Terms of Service"
    }, 
    "title": "Trello API", 
    "contact": {
      "url": "https://trello.com/home", 
      "name": "Trello"
    }, 
    "api_documentation": "https://trello.com/docs/api", 
    "version": "1.0"
  }, 
  "paths": {
    "/1/members/{idMember or username}/cards": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachment_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "stickers"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemStates"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklists"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "visible", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/boards/{board_id}/name": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/lists/{idList}/subscribed": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/members/{idMember or username}/cards/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/search": {
      "get": {
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "query"
          }, 
          {
            "description": "A comma-separated list of objectIds, 24-character hex strings", 
            "default": "mine", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idBoards"
          }, 
          {
            "description": "A comma-separated list of objectIds, 24-character hex strings", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idOrganizations"
          }, 
          {
            "description": "A comma-separated list of objectIds, 24-character hex strings", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idCards"
          }, 
          {
            "description": "all or a comma-separated list of: actions, boards, cards, members or organizations", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "modelTypes"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "name and idOrganization", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_fields"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "10", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "boards_limit"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_fields"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "10", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "cards_limit"
          }, 
          {
            "description": "a number from 0 to 100", 
            "default": "0", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "cards_page"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_board"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_list"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_members"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_stickers"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_attachments"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "name and displayName", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization_fields"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "10", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organizations_limit"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials, username and confirmed", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "10", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members_limit"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "partial"
          }
        ], 
        "tags": [
          "search"
        ]
      }
    }, 
    "/1/labels/{idLabel}/board": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "label"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/board": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/actions/{idAction}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: data, date, idMemberCreator or type", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/membersInvited": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/attachments": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A file", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "file"
          }, 
          {
            "description": "A URL starting with http:// or https:// or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "url"
          }, 
          {
            "description": "a string with a length from 0 to 256", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "a string with a length from 0 to 256", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "mimeType"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checklist/{idChecklist}/checkItem": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the checklist.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklist"
          }, 
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "bottom", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/members/{idMember or username}/savedSearches/{idSavedSearch}/pos": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSavedSearch"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boardsInvited": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/actions/{idAction}/display": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/labels/{color}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A valid label color or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "color"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/members/{idMember or username}/savedSearches/{idSavedSearch}/query": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSavedSearch"
          }, 
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/lists/{idList}/board/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/organizations": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "A string with a length of at least 1.  Cannot begin or end with a space.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "displayName"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "desc"
          }, 
          {
            "description": "A URL starting with http:// or https:// or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "website"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/idLabels/{idLabel}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the label to delete", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idLabel"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/labels/{idLabel}/board/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "label"
        ]
      }
    }, 
    "/1/lists/{idList}/closed": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/actions": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "display"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "commentCard and updateCard:idList", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "Page * limit must be less than 1000", 
            "default": "0", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "page"
          }, 
          {
            "description": "Only return actions related to these model ids", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idModels"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator_fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/tokens/{token}/webhooks/{idWebhook}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the webhook", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idWebhook"
          }
        ], 
        "tags": [
          "token"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the webhook", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idWebhook"
          }
        ], 
        "tags": [
          "token"
        ]
      }
    }, 
    "/1/members/{idMember or username}/fullName": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A string with a length of at least 1.  Cannot begin or end with a space.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/boards/{board_id}/labelNames/yellow": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/lists/{idList}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: closed, idBoard, name, pos or subscribed", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/idAttachmentCover": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "Id of the image attachment of this card to use as its cover, or null for no cover", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/organization/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/webhooks/": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "description"
          }, 
          {
            "description": "A valid URL that is reachable with a HEAD request", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "callbackURL"
          }, 
          {
            "description": "id of the model that should be hooked", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idModel"
          }
        ], 
        "tags": [
          "webhook"
        ]
      }
    }, 
    "/1/boards/{board_id}/labelNames/green": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/members/{idMember or username}/notifications/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAdminToBoard, addAdminToOrganization, addedAttachmentToCard, addedMemberToCard, addedToBoard, addedToCard, addedToOrganization, cardDueSoon, changeCard, closeBoard, commentCard, createdCard, declinedInvitationToBoard, declinedInvitationToOrganization, invitedToBoard, invitedToOrganization, makeAdminOfBoard, makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard, removedFromBoard, removedFromCard, removedFromOrganization, removedMemberFromCard, unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization or updateCheckItemStateOnCard", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/members/{idMember or username}/prefs/minutesBetweenSummaries": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "-1 (disabled), 1 or 60", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/closed": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/members/{idMember or username}/actions": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "display"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "Page * limit must be less than 1000", 
            "default": "0", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "page"
          }, 
          {
            "description": "Only return actions related to these model ids", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idModels"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator_fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/webhooks/{idWebhook}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: active, callbackURL, description or idModel", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "webhook"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/prefs/externalMembersDisabled": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/tokens/{token}/member": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "token"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/members": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An email address", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "email"
          }, 
          {
            "description": "A string with a length of at least 1.  Cannot begin or end with a space.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "fullName"
          }, 
          {
            "description": "One of: admin, normal or observer", 
            "default": "normal", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "type"
          }
        ], 
        "tags": [
          "organization"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: admins, all, none, normal or owners", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "true or false ; works for premium organizations only.", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "activity"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/calendarKey/generate": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/actions/{idAction}/board": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/boards/{board_id}/boardStars": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: mine or none", 
            "default": "mine", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/actions/{idAction}/member/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/members/{idMember}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id, username, or organization name", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }, 
          {
            "description": "One of: admin, normal or observer", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "type"
          }
        ], 
        "tags": [
          "organization"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id, username, or organization name", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/members/{idMember or username}/prefs/colorBlind": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/members/{idMember or username}/tokens": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/organization": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/boards/{board_id}/cards/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/prefs/associatedDomain": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The google apps domain to link this org to.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/prefs/invitations": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: admins or members", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/members/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "One of: admins, all, none, normal or owners", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/prefs/comments": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: disabled, members, observers, org or public", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/notifications/{idNotification}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "unread"
          }
        ], 
        "tags": [
          "notification"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "display"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "entities"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator, type or unread", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "name", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "list"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "name", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "displayName", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/boards/{board_id}/myPrefs/showSidebarActivity": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/list": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/attachments/{idAttachment}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the attachment to remove from the card.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idAttachment"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the attachment.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idAttachment"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/boards": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, members, open, organization, pinned, public, starred or unpinned", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_entities"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_limit"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_since"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_fields"
          }, 
          {
            "description": "all or a comma-separated list of: active, admin, deactivated, me or normal", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberships"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "name and displayName", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization_fields"
          }, 
          {
            "description": "One of: all, closed, none or open", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "lists"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/members/{idMember or username}/organizations/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "One of: all, members, none or public", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/due": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/boards/{board_id}/members/{idMember}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id, username, or organization name", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }, 
          {
            "description": "One of: admin, normal or observer", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "type"
          }
        ], 
        "tags": [
          "board"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id, username, or organization name", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boardBackgrounds": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A file", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "file"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all, custom, default, none or premium", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/idCard": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the card that the checklist is on", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/pos": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/boards/{board_id}/prefs/cardCovers": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/membersVoted/{idMember}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the member whose vote to rescind", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/boards/{board_id}/organization": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/notifications/all/read": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/cards": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The name of the new card.  It isn&#39;t required if the name is being copied from provided by a URL, file or card that is being copied.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "desc"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "bottom", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "due"
          }, 
          {
            "description": "all or a comma-separated list of: blue, green, orange, purple, red or yellow", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labels"
          }, 
          {
            "description": "id of the list that the card should be added to", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idList"
          }, 
          {
            "description": "A comma-separated list of objectIds, 24-character hex strings", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idMembers"
          }, 
          {
            "description": "A comma-separated list of objectIds, 24-character hex strings", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idLabels"
          }, 
          {
            "description": "A URL starting with http:// or https:// or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "urlSource"
          }, 
          {
            "description": "A file", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fileSource"
          }, 
          {
            "description": "The id of the card to copy into a new card.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idCardSource"
          }, 
          {
            "description": "Properties of the card to copy over from the source.", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "keepFromSource"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/lists/{idList}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "closed"
          }, 
          {
            "description": "id of the board the list should be moved to", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "subscribed"
          }
        ], 
        "tags": [
          "list"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all, closed, none or open", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "cards"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "name, desc, descData, closed, idOrganization, pinned, url and prefs", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_fields"
          }, 
          {
            "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed", 
            "default": "name, closed, idBoard and pos", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/boards/{board_id}/memberships/{idMembership}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMembership"
          }, 
          {
            "description": "One of: admin, normal or observer", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "type"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A membership document id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMembership"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/myPrefs/showSidebarBoardActions": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/board/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/actions/{idAction}/organization": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/boards/{board_id}/checklists": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }
        ], 
        "tags": [
          "board"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "cards"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_fields"
          }, 
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItems"
          }, 
          {
            "description": "all or a comma-separated list of: name, nameData, pos, state or type", 
            "default": "name, nameData, pos and state", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItem_fields"
          }, 
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: idBoard, idCard, name or pos", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/members/{idMember or username}/organizationsInvited/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/batch": {
      "get": {
        "parameters": [
          {
            "description": "list of API v1 GET routes, not including the version prefix", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "urls"
          }
        ], 
        "tags": [
          "batch"
        ]
      }
    }, 
    "/1/lists/{idList}/idBoard": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "id of the board the list should be moved to", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }, 
          {
            "description": "position of the list on the new board", 
            "default": "top", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/labels/{idLabel}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the label.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idLabel"
          }, 
          {
            "description": "all or a comma-separated list of: color, idBoard, name or uses", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/prefs/permissionLevel": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: private or public", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/membersInvited": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/board": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/list/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, idBoard, name, pos or subscribed", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/member/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boardStars/{idBoardStar}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the board star to delete", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardStar"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardStar"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/search/members": {
      "get": {
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "query"
          }, 
          {
            "description": "a number from 1 to 20", 
            "default": "8", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "An id, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }, 
          {
            "description": "An id, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idOrganization"
          }, 
          {
            "description": "A boolean", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "onlyOrgMembers"
          }
        ], 
        "tags": [
          "search"
        ]
      }
    }, 
    "/1/members/{idMember or username}/savedSearches/{idSavedSearch}/name": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSavedSearch"
          }, 
          {
            "description": "A non-empty string with at least one non-space character", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the checklist.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklistCurrent"
          }, 
          {
            "description": "The id of the checkitem to modify.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCheckItem"
          }, 
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "One of: complete, false, incomplete or true", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "state"
          }, 
          {
            "description": "An id, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklist"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/sessions/{idSession}/status": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: active, disconnected or idle", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }, 
          {
            "description": "a string with a length from 16 to 24", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSession"
          }
        ], 
        "tags": [
          "session"
        ]
      }
    }, 
    "/1/members/{idMember or username}/customBoardBackgrounds": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A file", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "file"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/boards/{board_id}/labelNames/purple": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/powerUps/{powerUp}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: calendar, cardAging, recap or voting", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "powerUp"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/lists": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "top", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "board"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "cards"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_fields"
          }, 
          {
            "description": "One of: all, closed, none or open", 
            "default": "open", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/myPrefs/emailPosition": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: bottom or top", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/idLabels": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the label to add", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "desc"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "closed"
          }, 
          {
            "description": "all or a comma-separated list of: blue, green, orange, purple, red or yellow", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labels"
          }, 
          {
            "description": "A comma-separated list of objectIds, 24-character hex strings", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idMembers"
          }, 
          {
            "description": "Id of the image attachment of this card to use as its cover, or null for no cover", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idAttachmentCover"
          }, 
          {
            "description": "id of the list the card should be moved to", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idList"
          }, 
          {
            "description": "id of the board the card should be moved to", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "due"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "subscribed"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "card"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_display"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_limit"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_fields"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_memberCreator_fields"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachment_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "membersVoted"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberVoted_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemStates"
          }, 
          {
            "description": "all or a comma-separated list of: idCheckItem or state", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemState_fields"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklists"
          }, 
          {
            "description": "all or a comma-separated list of: idBoard, idCard, name or pos", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklist_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "name, desc, descData, closed, idOrganization, pinned, url and prefs", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "list"
          }, 
          {
            "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "list_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "stickers"
          }, 
          {
            "description": "all or a comma-separated list of: image, imageScaled, imageUrl, left, rotate, top or zIndex", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "sticker_fields"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl and url", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/name": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/desc": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/actions/{idAction}/card": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/markAssociatedNotificationsRead": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boardBackgrounds/{idBoardBackground}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the background to update", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardBackground"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "tile"
          }, 
          {
            "description": "One of: dark, light or unknown", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "brightness"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardBackground"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardBackground"
          }, 
          {
            "description": "all or a comma-separated list of: brightness, fullSizeUrl, scaled or tile", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/boards/{board_id}/membersInvited/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/members/{idMember or username}/oneTimeMessagesDismissed": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "Type of message dismissed", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/members/{idMember or username}/organizationsInvited": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/boards/{board_id}/labelNames/red": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/prefs/boardVisibilityRestrict/private": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: admin, none or org", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/organization/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "desc"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "closed"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "subscribed"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idOrganization"
          }, 
          {
            "description": "One of: org, private or public", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/permissionLevel"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/selfJoin"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/cardCovers"
          }, 
          {
            "description": "One of: admins or members", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/invitations"
          }, 
          {
            "description": "One of: disabled, members, observers, org or public", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/voting"
          }, 
          {
            "description": "One of: disabled, members, observers, org or public", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/comments"
          }, 
          {
            "description": "A standard background name, or the id of a custom background", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/background"
          }, 
          {
            "description": "One of: pirate or regular", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/cardAging"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/calendarFeedEnabled"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labelNames/green"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labelNames/yellow"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labelNames/orange"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labelNames/red"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labelNames/purple"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labelNames/blue"
          }
        ], 
        "tags": [
          "board"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_display"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_since"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_limit"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_memberCreator_fields"
          }, 
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "cards"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_fields"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_attachment_fields"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_checklists"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_stickers"
          }, 
          {
            "description": "One of: mine or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "boardStars"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labels"
          }, 
          {
            "description": "all or a comma-separated list of: color, idBoard, name or uses", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "label_fields"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labels_limit"
          }, 
          {
            "description": "One of: all, closed, none or open", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "lists"
          }, 
          {
            "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "list_fields"
          }, 
          {
            "description": "all or a comma-separated list of: active, admin, deactivated, me or normal", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberships"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberships_member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberships_member_fields"
          }, 
          {
            "description": "One of: admins, all, none, normal or owners", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, initials, fullName, username and confirmed", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": "One of: admins, all, none, normal or owners", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "membersInvited"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, initials, fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "membersInvited_fields"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklists"
          }, 
          {
            "description": "all or a comma-separated list of: idBoard, idCard, name or pos", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklist_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "name and displayName", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization_fields"
          }, 
          {
            "description": "all or a comma-separated list of: active, admin, deactivated, me or normal", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization_memberships"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "myPrefs"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "name, desc, descData, closed, idOrganization, pinned, url, shortUrl, prefs and labelNames", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/idBoard": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "id of the board the card should be moved to", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }, 
          {
            "description": "id of the list that the card should be moved to on the new board", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idList"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/boards/{board_id}/prefs/cardAging": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: pirate or regular", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/prefs/orgInviteRestrict": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An email address with optional expansion tokens", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An email address with optional expansion tokens", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/logo": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A file", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "file"
          }
        ], 
        "tags": [
          "organization"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/boards/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, members, open, organization, pinned, public, starred or unpinned", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/actions": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "display"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "Page * limit must be less than 1000", 
            "default": "0", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "page"
          }, 
          {
            "description": "Only return actions related to these model ids", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idModels"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator_fields"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/myPrefs": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/labelNames/orange": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/memberships": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: active, admin, deactivated, me or normal", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: data, date, idMemberCreator, type or unread", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/prefs/boardVisibilityRestrict/org": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: admin, none or org", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/display": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/actions/{idAction}/list": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boardStars/{idBoardStar}/pos": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardStar"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/idMembers": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A comma-separated list of objectIds, 24-character hex strings", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the member to add to the card", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/idMembers/{idMember}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the member to remove from the card", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/boards/{board_id}/cards": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachment_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "stickers"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemStates"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklists"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "visible", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/entities": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/boards/{board_id}/labelNames/blue": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/webhooks/{idWebhook}/idModel": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "id of the model to be monitored", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "webhook"
        ]
      }
    }, 
    "/1/members/{idMember or username}/avatar": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A file", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "file"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/list": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/actions/{idAction}/board/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/members/{idMember}/all": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id, username, or organization name", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checklist/{idChecklist}/checkItem/{idCheckItem}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the checklist.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklist"
          }, 
          {
            "description": "the id of the check item to remove", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCheckItem"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/boards/{board_id}/lists/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "One of: all, closed, none or open", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/myPrefs/showSidebar": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/cards": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachment_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "stickers"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemStates"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklists"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "One of: all, closed, none or open", 
            "default": "open", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/actions/{idAction}/text": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/members/{idMember or username}/notifications": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "description": "You can only read the notifications for the member associated with the supplied token", 
        "parameters": [
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "display"
          }, 
          {
            "description": "all or a comma-separated list of: addAdminToBoard, addAdminToOrganization, addedAttachmentToCard, addedMemberToCard, addedToBoard, addedToCard, addedToOrganization, cardDueSoon, changeCard, closeBoard, commentCard, createdCard, declinedInvitationToBoard, declinedInvitationToOrganization, invitedToBoard, invitedToOrganization, makeAdminOfBoard, makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard, removedFromBoard, removedFromCard, removedFromOrganization, removedMemberFromCard, unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization or updateCheckItemStateOnCard", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "One of: all, read or unread", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "read_filter"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator, type or unread", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "a number from 0 to 100", 
            "default": "0", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "page"
          }, 
          {
            "description": "An id, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "An id, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator_fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/actions/{idAction}/memberCreator/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/boards/{board_id}/members/{idMember}/cards": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachment_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemStates"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklists"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "name, desc, closed, idOrganization, pinned, url and prefs", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "list"
          }, 
          {
            "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "list_fields"
          }, 
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "visible", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "An id, username, or organization name", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/sessions/socket": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "description": "This is the route for WebSocket requests.  See the socket API reference for a description of WebSocket usage.", 
        "parameters": [], 
        "tags": [
          "session"
        ]
      }
    }, 
    "/1/actions/{idAction}/organization/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/boards/{board_id}/labels": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "A valid label color or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "color"
          }
        ], 
        "tags": [
          "board"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: color, idBoard, name or uses", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/tokens/{token}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "token"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: dateCreated, dateExpires, idMember, identifier or permissions", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "webhooks"
          }
        ], 
        "tags": [
          "token"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An email address with optional expansion tokens", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/orgInviteRestrict"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/externalMembersDisabled"
          }, 
          {
            "description": "The google apps domain to link this org to.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/associatedDomain"
          }, 
          {
            "description": "a number from 1 to 2", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/googleAppsVersion"
          }, 
          {
            "description": "One of: admin, none or org", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/boardVisibilityRestrict/private"
          }, 
          {
            "description": "One of: admin, none or org", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/boardVisibilityRestrict/org"
          }, 
          {
            "description": "One of: admin, none or org", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/boardVisibilityRestrict/public"
          }, 
          {
            "description": "A string with a length of at least 3.  Only lowercase letters, underscores, and numbers are allowed.  Must be unique.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "A string with a length of at least 1.  Cannot begin or end with a space.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "displayName"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "desc"
          }, 
          {
            "description": "A URL starting with http:// or https:// or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "website"
          }, 
          {
            "description": "One of: private or public", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/permissionLevel"
          }
        ], 
        "tags": [
          "organization"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "organization"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_display"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_limit"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_fields"
          }, 
          {
            "description": "all or a comma-separated list of: active, admin, deactivated, me or normal", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberships"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberships_member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberships_member_fields"
          }, 
          {
            "description": "One of: admins, all, none, normal or owners", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials, username and confirmed", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": "true or false ; works for premium organizations only.", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_activity"
          }, 
          {
            "description": "One of: admins, all, none, normal or owners", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "membersInvited"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, initials, fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "membersInvited_fields"
          }, 
          {
            "description": "all or a comma-separated list of: closed, members, open, organization, pinned, public, starred or unpinned", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "boards"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_fields"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_display"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_since"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_limit"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_action_fields"
          }, 
          {
            "description": "One of: all, closed, none or open", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_lists"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "paid_account"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "name, displayName, desc, descData, url, website, logoHash, products and powerUps", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/prefs/background": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A standard background name, or the id of a custom background", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/members/{idMember or username}/savedSearches/{idSavedSearch}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A non-empty string with at least one non-space character", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "query"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the saved search to delete", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSavedSearch"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSavedSearch"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/stickers/{idSticker}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the sticker to modify", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSticker"
          }, 
          {
            "description": "undefined", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "top"
          }, 
          {
            "description": "undefined", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "left"
          }, 
          {
            "description": "Valid Z values for stickers, must be an integer", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "zIndex"
          }, 
          {
            "description": "undefined", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "rotate"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the sticker to remove", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSticker"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the sticker", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSticker"
          }, 
          {
            "description": "all or a comma-separated list of: image, imageScaled, imageUrl, left, rotate, top or zIndex", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/prefs/boardVisibilityRestrict/public": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: admin, none or org", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/actions": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "display"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "Page * limit must be less than 1000", 
            "default": "0", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "page"
          }, 
          {
            "description": "Only return actions related to these model ids", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idModels"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator_fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/unread": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/tokens/{token}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: dateCreated, dateExpires, idMember, identifier or permissions", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "token"
        ]
      }
    }, 
    "/1/boards/{board_id}/cards/{idCard}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id (or short id) of a card on the board", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCard"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachment_fields"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_display"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_limit"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_fields"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_memberCreator_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, initials, fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemStates"
          }, 
          {
            "description": "all or a comma-separated list of: idCheckItem or state", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemState_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labels"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklists"
          }, 
          {
            "description": "all or a comma-separated list of: idBoard, idCard, name or pos", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklist_fields"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/actions/{idAction}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "text"
          }
        ], 
        "tags": [
          "action"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "action"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "display"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "entities"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator_fields"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/lists/{idList}/pos": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/stickers": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "image"
          }, 
          {
            "description": "undefined", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "top"
          }, 
          {
            "description": "undefined", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "left"
          }, 
          {
            "description": "Valid Z values for stickers, must be an integer", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "zIndex"
          }, 
          {
            "description": "undefined", 
            "default": "0", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "rotate"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: image, imageScaled, imageUrl, left, rotate, top or zIndex", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boardStars": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the board to star", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/sessions/{idSession}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: active, disconnected or idle", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "status"
          }, 
          {
            "description": "a string with a length from 16 to 24", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idSession"
          }, 
          {
            "description": "The id of the board you&#39;re viewing.  Boards with no viewers will not get updates about members&#39; statuses.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }
        ], 
        "tags": [
          "session"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/displayName": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A string with a length of at least 1.  Cannot begin or end with a space.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/card/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/webhooks": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "description"
          }, 
          {
            "description": "A valid URL that is reachable with a HEAD request", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "callbackURL"
          }, 
          {
            "description": "id of the model that should be hooked", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idModel"
          }
        ], 
        "tags": [
          "webhook"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boards": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, members, open, organization, pinned, public, starred or unpinned", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_entities"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_limit"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_since"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_fields"
          }, 
          {
            "description": "all or a comma-separated list of: active, admin, deactivated, me or normal", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberships"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "name and displayName", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization_fields"
          }, 
          {
            "description": "One of: all, closed, none or open", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "lists"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boards/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, members, open, organization, pinned, public, starred or unpinned", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/members/{idMember or username}/username": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A string with a length of at least 3.  Only lowercase letters, underscores, and numbers are allowed.  Must be unique.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/lists/{idList}/cards": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "desc"
          }, 
          {
            "description": "all or a comma-separated list of: blue, green, orange, purple, red or yellow", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "labels"
          }, 
          {
            "description": "A comma-separated list of objectIds, 24-character hex strings", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idMembers"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "due"
          }
        ], 
        "tags": [
          "list"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachment_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "stickers"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemStates"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklists"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "One of: all, closed, none or open", 
            "default": "open", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/boards/{board_id}/idOrganization": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/labels/{idLabel}/name": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "label"
        ]
      }
    }, 
    "/1/actions/{idAction}/entities": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/website": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A URL starting with http:// or https:// or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/labels/{idLabel}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "A valid label color or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "color"
          }
        ], 
        "tags": [
          "label"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "label"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: color, idBoard, name or uses", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "label"
        ]
      }
    }, 
    "/1/boards/{board_id}/emailKey/generate": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/lists": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "id of the board that the list should be added to", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }, 
          {
            "description": "The id of the list to copy into a new list.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idListSource"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "top", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checklist/{idChecklist}/checkItem/{idCheckItem}/state": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the checklist.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklist"
          }, 
          {
            "description": "The id of the checkitem to modify.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCheckItem"
          }, 
          {
            "description": "One of: complete, false, incomplete or true", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/idList": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "id of the list the card should be moved to", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/member": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/types/{id}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "type"
        ]
      }
    }, 
    "/1/actions/{idAction}/member": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checkItemStates": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: idCheckItem or state", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/webhooks/{idWebhook}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "description"
          }, 
          {
            "description": "A valid URL that is reachable with a HEAD request", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "callbackURL"
          }, 
          {
            "description": "id of the model to be monitored", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idModel"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "active"
          }
        ], 
        "tags": [
          "webhook"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "webhook"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "webhook"
        ]
      }
    }, 
    "/1/boards/{board_id}/deltas": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A valid tag for subscribing", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "tags"
          }, 
          {
            "description": "a number from -1 to Infinity", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "ixLastUpdate"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/members/{idMember or username}/savedSearches": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A non-empty string with at least one non-space character", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "query"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/card": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/members/{idMember or username}/initials": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A string with a length from 1 to 4.  Cannot begin or end with a space", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/checkItems/{idCheckItem}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "the id of the check item to remove", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCheckItem"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: name, nameData, pos, state or type", 
            "default": "name, nameData, pos and state", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "id of the checkitem to retrieve", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCheckItem"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/members/{idMember or username}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/{field}": {
      "get": {
        "parameters": [
          {
            "description": "One of: idBoard, idCard, name or pos", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/members/{idMember or username}/avatarSource": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: gravatar, none or upload", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/tokens/{token}/webhooks": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "description"
          }, 
          {
            "description": "A valid URL that is reachable with a HEAD request", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "callbackURL"
          }, 
          {
            "description": "id of the model to be monitored", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idModel"
          }
        ], 
        "tags": [
          "token"
        ]
      }, 
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "description"
          }, 
          {
            "description": "A valid URL that is reachable with a HEAD request", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "callbackURL"
          }, 
          {
            "description": "id of the model to be monitored", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idModel"
          }
        ], 
        "tags": [
          "token"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "token"
        ]
      }
    }, 
    "/1/actions/{idAction}/card/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/memberCreator/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/sessions": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: active, disconnected or idle", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "status"
          }, 
          {
            "description": "The id of the board you&#39;re viewing.  Boards with no viewers will not get updates about members&#39; statuses.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }
        ], 
        "tags": [
          "session"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/list/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, idBoard, name, pos or subscribed", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/membersInvited/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/subscribed": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/checklists": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "id of the board that the checklist should be added to", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }, 
          {
            "description": "id of the card that the checklist should be added to", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idCard"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "bottom", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }, 
          {
            "description": "The id of the source checklist to copy into a new checklist.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklistSource"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/members/{idMember or username}/organizations": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all, members, none or public", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "paid_account"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/boards/{board_id}/prefs/calendarFeedEnabled": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/membersVoted": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the member to vote &#39;yes&#39; on the card", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boardsInvited/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checklists": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the checklist to add to the card, or null to create a new one.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "The id of the source checklist to copy into a new checklist.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklistSource"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "cards"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_fields"
          }, 
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItems"
          }, 
          {
            "description": "all or a comma-separated list of: name, nameData, pos, state or type", 
            "default": "name, nameData, pos and state", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItem_fields"
          }, 
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: idBoard, idCard, name or pos", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/members/{idMember or username}/customStickers/{idCustomSticker}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCustomSticker"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCustomSticker"
          }, 
          {
            "description": "all or a comma-separated list of: scaled or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/boards/{board_id}/closed": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/members/{idMember or username}/deltas": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A valid tag for subscribing", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "tags"
          }, 
          {
            "description": "a number from -1 to Infinity", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "ixLastUpdate"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/members/{idMember or username}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A string with a length of at least 1.  Cannot begin or end with a space.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fullName"
          }, 
          {
            "description": "A string with a length from 1 to 4.  Cannot begin or end with a space", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "initials"
          }, 
          {
            "description": "A string with a length of at least 3.  Only lowercase letters, underscores, and numbers are allowed.  Must be unique.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "username"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "bio"
          }, 
          {
            "description": "One of: gravatar, none or upload", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "avatarSource"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/colorBlind"
          }, 
          {
            "description": "a string with a length from 0 to 255", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/locale"
          }, 
          {
            "description": "-1 (disabled), 1 or 60", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs/minutesBetweenSummaries"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "description": "If you specify 'me' as the username, this call will respond as if you had supplied the username associated with the supplied token", 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_display"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions_limit"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_fields"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "action_before"
          }, 
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "cards"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_member_fields"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "url and previews", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_attachment_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_stickers"
          }, 
          {
            "description": "all or a comma-separated list of: closed, members, open, organization, pinned, public, starred or unpinned", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "boards"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "name, closed, idOrganization and pinned", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_fields"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_display"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_since"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_actions_limit"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_action_fields"
          }, 
          {
            "description": "One of: all, closed, none or open", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_lists"
          }, 
          {
            "description": "all or a comma-separated list of: active, admin, deactivated, me or normal", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_memberships"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_organization"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "name and displayName", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_organization_fields"
          }, 
          {
            "description": "all or a comma-separated list of: closed, members, open, organization, pinned, public, starred or unpinned", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "boardsInvited"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "name, closed, idOrganization and pinned", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "boardsInvited_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "boardStars"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "savedSearches"
          }, 
          {
            "description": "One of: all, members, none or public", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organizations"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organization_paid_account"
          }, 
          {
            "description": "One of: all, members, none or public", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organizationsInvited"
          }, 
          {
            "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "organizationsInvited_fields"
          }, 
          {
            "description": "all or a comma-separated list of: addAdminToBoard, addAdminToOrganization, addedAttachmentToCard, addedMemberToCard, addedToBoard, addedToCard, addedToOrganization, cardDueSoon, changeCard, closeBoard, commentCard, createdCard, declinedInvitationToBoard, declinedInvitationToOrganization, invitedToBoard, invitedToOrganization, makeAdminOfBoard, makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard, removedFromBoard, removedFromCard, removedFromOrganization, removedMemberFromCard, unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization or updateCheckItemStateOnCard", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "notifications"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "notifications_entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "notifications_display"
          }, 
          {
            "description": "a number from 1 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "notifications_limit"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator, type or unread", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "notification_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "notification_memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "notification_memberCreator_fields"
          }, 
          {
            "description": "An id, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "notification_before"
          }, 
          {
            "description": "An id, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "notification_since"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "tokens"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "paid_account"
          }, 
          {
            "description": "One of: all, custom, default, none or premium", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "boardBackgrounds"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "customBoardBackgrounds"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "customStickers"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "customEmoji"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/board/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/actions/{idAction}/memberCreator": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/boards/{board_id}/myPrefs/idEmailList": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/members/{idMember or username}/prefs/locale": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 255", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checklist/{idChecklist}/checkItem/{idCheckItem}/name": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the checklist.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklist"
          }, 
          {
            "description": "The id of the checkitem to modify.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCheckItem"
          }, 
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/board": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/lists/{idList}/name": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/webhooks/{idWebhook}/description": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "webhook"
        ]
      }
    }, 
    "/1/boards/{board_id}/prefs/permissionLevel": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: org, private or public", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/cards/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "One of: all, closed, none or open", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/boards/{board_id}/powerUps": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: calendar, cardAging, recap or voting", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/members/{idMember}/cards": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "actions"
          }, 
          {
            "description": "A boolean value or &quot;cover&quot; for only card cover attachments", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachments"
          }, 
          {
            "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "attachment_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "members"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItemStates"
          }, 
          {
            "description": "One of: all or none", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checklists"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board"
          }, 
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "name, desc, closed, idOrganization, pinned, url and prefs", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "board_fields"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "list"
          }, 
          {
            "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "list_fields"
          }, 
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "visible", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "An id, username, or organization name", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/actions/{idAction}/list/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, idBoard, name, pos or subscribed", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "action"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/deltas": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A valid tag for subscribing", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "tags"
          }, 
          {
            "description": "a number from -1 to Infinity", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "ixLastUpdate"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/checkItems": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "bottom", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checked"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: name, nameData, pos, state or type", 
            "default": "name, nameData, pos and state", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the checklist.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklist"
          }, 
          {
            "description": "The id of the checkitem to modify.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCheckItem"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/desc": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/members/{idMember or username}/boardStars/{idBoardStar}/idBoard": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardStar"
          }, 
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/members/{idMember or username}/customEmoji": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A file", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "file"
          }, 
          {
            "description": "a string with a length from 2 to 64", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "description": "This gets the list of all of the user\u2019s uploaded emoji", 
        "parameters": [
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/actions/comments": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "text"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/memberships": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: active, admin, deactivated, me or normal", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/myPrefs/showSidebarMembers": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/desc": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the checklist.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklist"
          }, 
          {
            "description": "The id of the checkitem to modify.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCheckItem"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/board/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/boards": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "desc"
          }, 
          {
            "description": "The id or name of the organization to add the board to.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idOrganization"
          }, 
          {
            "description": "The id of the board to copy into the new board", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardSource"
          }, 
          {
            "description": "Components of the source board to copy.", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "keepFromSource"
          }, 
          {
            "description": "all or a comma-separated list of: calendar, cardAging, recap or voting", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "powerUps"
          }, 
          {
            "description": "One of: org, private or public", 
            "default": "private", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs_permissionLevel"
          }, 
          {
            "description": "One of: disabled, members, observers, org or public", 
            "default": "disabled", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs_voting"
          }, 
          {
            "description": "One of: disabled, members, observers, org or public", 
            "default": "members", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs_comments"
          }, 
          {
            "description": "One of: admins or members", 
            "default": "members", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs_invitations"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs_selfJoin"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs_cardCovers"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "blue", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs_background"
          }, 
          {
            "description": "One of: pirate or regular", 
            "default": "regular", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "prefs_cardAging"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/lists/{idList}/board": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/tokens/{token}/member/{field}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "field"
          }
        ], 
        "tags": [
          "token"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/members/{idMember}/deactivated": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id, username, or organization name", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMember"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/boards/{board_id}/prefs/selfJoin": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/members/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "One of: admins, all, none, normal or owners", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/lists/{idList}/moveAllCards": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "id of the board that the cards should be moved to", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }, 
          {
            "description": "id of the list that the cards should be moved to", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idList"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/subscribed": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/memberships/{idMembership}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMembership"
          }, 
          {
            "description": "One of: admin, normal or observer", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "type"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }
        ], 
        "tags": [
          "organization"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A membership document id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idMembership"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/labels": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: blue, green, orange, purple, red or yellow", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A valid label color or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "color"
          }, 
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/lists/{idList}/archiveAllCards": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/members/{idMember or username}/customBoardBackgrounds/{idBoardBackground}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the background to update", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardBackground"
          }, 
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "tile"
          }, 
          {
            "description": "One of: dark, light or unknown", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "brightness"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardBackground"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoardBackground"
          }, 
          {
            "description": "all or a comma-separated list of: brightness, fullSizeUrl, scaled or tile", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/checklists/{idChecklist}": {
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "The id of the checklist to remove from the card", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idChecklist"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/actions/{idAction}/comments": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "description": "This can only be done by the original author of the comment.", 
        "parameters": [
          {
            "description": "The id of the action.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idAction"
          }, 
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "text"
          }
        ], 
        "tags": [
          "card"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "description": "This can only be done by the original author of the comment, or someone with higher permissions than the original author.", 
        "parameters": [
          {
            "description": "The id of the action.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idAction"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/labels/{idLabel}/color": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A valid label color or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "label"
        ]
      }
    }, 
    "/1/webhooks/{idWebhook}/callbackURL": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A valid URL that is reachable with a HEAD request", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "webhook"
        ]
      }
    }, 
    "/1/boards/{board_id}/members": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An email address", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "email"
          }, 
          {
            "description": "A string with a length of at least 1.  Cannot begin or end with a space.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "fullName"
          }, 
          {
            "description": "One of: admin, normal or observer", 
            "default": "normal", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "type"
          }
        ], 
        "tags": [
          "board"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: admins, all, none, normal or owners", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "fullName and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "true or false ; works for premium organizations only.", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "activity"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/lists/{idList}/cards/{filter}": {
      "get": {
        "parameters": [
          {
            "description": "One of: all, closed, none or open", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/pos": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/name": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A string with a length of at least 3.  Only lowercase letters, underscores, and numbers are allowed.  Must be unique.", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "The id of the card that the checklist is on", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idCard"
          }, 
          {
            "description": "A position. top , bottom , or a positive number.", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "pos"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }, 
      "delete": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "checklist"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: all, closed, none, open or visible", 
            "default": "none", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "cards"
          }, 
          {
            "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "card_fields"
          }, 
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItems"
          }, 
          {
            "description": "all or a comma-separated list of: name, nameData, pos, state or type", 
            "default": "name, nameData, pos and state", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "checkItem_fields"
          }, 
          {
            "description": "all or a comma-separated list of: idBoard, idCard, name or pos", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/boards/{board_id}/myPrefs/showListGuide": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/organizations/{idOrg or name}/prefs/googleAppsVersion": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a number from 1 to 2", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "organization"
        ]
      }
    }, 
    "/1/notifications/{idNotification}/memberCreator": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash, url or username", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "notification"
        ]
      }
    }, 
    "/1/boards/{board_id}/markAsViewed": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/boards/{board_id}/prefs/voting": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "One of: disabled, members, observers, org or public", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "board"
        ]
      }
    }, 
    "/1/checklists/{idChecklist}/name": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 1 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "checklist"
        ]
      }
    }, 
    "/1/members/{idMember or username}/customEmoji/{idCustomEmoji}": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idCustomEmoji"
          }, 
          {
            "description": "all or a comma-separated list of: name or url", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/labels": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "name"
          }, 
          {
            "description": "A valid label color or null", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "color"
          }, 
          {
            "description": "An id", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "idBoard"
          }
        ], 
        "tags": [
          "label"
        ]
      }
    }, 
    "/1/members/{idMember or username}/bio": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "a string with a length from 0 to 16384", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/members/{idMember or username}/customStickers": {
      "post": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "A file", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "file"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "description": "This gets a list of all of the user\u2019s uploaded stickers", 
        "parameters": [
          {
            "description": "One of: all or none", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/1/cards/{card id or shortlink}/members": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }
        ], 
        "tags": [
          "card"
        ]
      }
    }, 
    "/1/lists/{idList}/actions": {
      "get": {
        "security": [
          {
            "trello_auth": [
              "read:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "entities"
          }, 
          {
            "description": " true or false", 
            "default": "false", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "display"
          }, 
          {
            "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "filter"
          }, 
          {
            "description": "all or a comma-separated list of: data, date, idMemberCreator or type", 
            "default": "all", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "fields"
          }, 
          {
            "description": "a number from 0 to 1000", 
            "default": "50", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "limit"
          }, 
          {
            "description": "One of: count, list or minimal", 
            "default": "list", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "format"
          }, 
          {
            "description": "A date, null or lastView", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "since"
          }, 
          {
            "description": "A date, or null", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "before"
          }, 
          {
            "description": "Page * limit must be less than 1000", 
            "default": "0", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "page"
          }, 
          {
            "description": "Only return actions related to these model ids", 
            "default": "undefined", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "idModels"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "member_fields"
          }, 
          {
            "description": " true or false", 
            "default": "true", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator"
          }, 
          {
            "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username", 
            "default": "avatarHash, fullName, initials and username", 
            "required": "false", 
            "in": "query", 
            "type": "string", 
            "name": "memberCreator_fields"
          }
        ], 
        "tags": [
          "list"
        ]
      }
    }, 
    "/1/webhooks/{idWebhook}/active": {
      "put": {
        "security": [
          {
            "trello_auth": [
              "read:boards", 
              "write:boards"
            ]
          }
        ], 
        "parameters": [
          {
            "description": " true or false", 
            "default": "undefined", 
            "required": "true", 
            "in": "query", 
            "type": "string", 
            "name": "value"
          }
        ], 
        "tags": [
          "webhook"
        ]
      }
    }
  }, 
  "host": "api.trello.com", 
  "schemes": [
    "http"
  ], 
  "tags": [
    {
      "name": "action", 
      "description": "https://trello.com/docs/api/action/index.html"
    }, 
    {
      "name": "batch", 
      "description": "https://trello.com/docs/api/batch/index.html"
    }, 
    {
      "name": "board", 
      "description": "https://trello.com/docs/api/board/index.html"
    }, 
    {
      "name": "card", 
      "description": "https://trello.com/docs/api/card/index.html"
    }, 
    {
      "name": "checklist", 
      "description": "https://trello.com/docs/api/checklist/index.html"
    }, 
    {
      "name": "label", 
      "description": "https://trello.com/docs/api/label/index.html"
    }, 
    {
      "name": "list", 
      "description": "https://trello.com/docs/api/list/index.html"
    }, 
    {
      "name": "member", 
      "description": "https://trello.com/docs/api/member/index.html"
    }, 
    {
      "name": "notification", 
      "description": "https://trello.com/docs/api/notification/index.html"
    }, 
    {
      "name": "organization", 
      "description": "https://trello.com/docs/api/organization/index.html"
    }, 
    {
      "name": "search", 
      "description": "https://trello.com/docs/api/search/index.html"
    }, 
    {
      "name": "session", 
      "description": "https://trello.com/docs/api/session/index.html"
    }, 
    {
      "name": "token", 
      "description": "https://trello.com/docs/api/token/index.html"
    }, 
    {
      "name": "type", 
      "description": "https://trello.com/docs/api/type/index.html"
    }, 
    {
      "name": "webhook", 
      "description": "https://trello.com/docs/api/webhook/index.html"
    }
  ], 
  "basePath": "/1", 
  "swagger": "2.0", 
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey", 
      "name": "api_key", 
      "in": "header"
    }, 
    "trello_auth": {
      "flow": "implicit", 
      "type": "oauth2", 
      "authorizationUrl": "https:\\/\\/trello.com\\/1\\/appKey\\/generate", 
      "scopes": {
        "write:boards": "modify any of the boards in your account", 
        "read:boards": "read any of the boards in your account"
      }
    }
  }
}